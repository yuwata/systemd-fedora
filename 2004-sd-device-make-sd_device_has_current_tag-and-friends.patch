From f6547432c23ca410604122b9ddde31c89256befc Mon Sep 17 00:00:00 2001
From: Yu Watanabe <watanabe.yu+github@gmail.com>
Date: Mon, 16 Nov 2020 19:47:42 +0900
Subject: [PATCH] sd-device: make sd_device_has_current_tag() and friends
 compatible with database version 0

---
 src/libsystemd/sd-device/sd-device.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/src/libsystemd/sd-device/sd-device.c b/src/libsystemd/sd-device/sd-device.c
index 1b07f528f2..4af67611bc 100644
--- a/src/libsystemd/sd-device/sd-device.c
+++ b/src/libsystemd/sd-device/sd-device.c
@@ -1444,6 +1444,16 @@ _public_ const char *sd_device_get_tag_next(sd_device *device) {
         return v;
 }
 
+static bool device_database_supports_current_tags(sd_device *device) {
+        assert(device);
+
+        /* The current tags (saved in Q field) feature is implemented in database version 1.
+         * If the database version is 0, then the tags (NOT current tags, saved in G field) are not
+         * sticky. Thus, we can safely bypass the operations for the current tags (Q) to tags (G). */
+
+        return device->database_version >= 1;
+}
+
 _public_ const char *sd_device_get_current_tag_first(sd_device *device) {
         void *v;
 
@@ -1451,6 +1461,9 @@ _public_ const char *sd_device_get_current_tag_first(sd_device *device) {
 
         (void) device_read_db(device);
 
+        if (!device_database_supports_current_tags(device))
+                return sd_device_get_tag_first(device);
+
         device->current_tags_iterator_generation = device->tags_generation;
         device->current_tags_iterator = ITERATOR_FIRST;
 
@@ -1465,6 +1478,9 @@ _public_ const char *sd_device_get_current_tag_next(sd_device *device) {
 
         (void) device_read_db(device);
 
+        if (!device_database_supports_current_tags(device))
+                return sd_device_get_tag_next(device);
+
         if (device->current_tags_iterator_generation != device->tags_generation)
                 return NULL;
 
@@ -1767,6 +1783,9 @@ _public_ int sd_device_has_current_tag(sd_device *device, const char *tag) {
 
         (void) device_read_db(device);
 
+        if (!device_database_supports_current_tags(device))
+                return sd_device_has_tag(device, tag);
+
         return set_contains(device->current_tags, tag);
 }
 
